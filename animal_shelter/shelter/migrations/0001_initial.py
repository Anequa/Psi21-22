<<<<<<< Updated upstream
# Generated by Django 3.2.5 on 2021-11-22 18:36
=======
# Generated by Django 3.2.5 on 2021-12-02 18:10
>>>>>>> Stashed changes

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
<<<<<<< Updated upstream
        ("authentication", "0001_initial"),
=======
        ('authentication', '0001_initial'),
>>>>>>> Stashed changes
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Animal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species', models.CharField(choices=[('Dog', 'Dog'), ('Cat', 'Cat')], max_length=3, verbose_name='species')),
                ('name', models.TextField(max_length=45, validators=[django.core.validators.RegexValidator(message='Name must start with upper letter and can not have numbers', regex='^[A-Z][a-z]+$')], verbose_name='name')),
                ('age', models.IntegerField(verbose_name='age')),
                ('gender', models.CharField(choices=[('female', 'Female'), ('male', 'Male')], max_length=6, verbose_name='gender')),
                ('size', models.CharField(choices=[('Small', 'Small'), ('Medium', 'Medium'), ('Big', 'Big')], max_length=10, verbose_name='size')),
                ('description', models.TextField(blank=True, default='Opis jeszcze nie zamieszczony', null=True, verbose_name='description')),
                ('date_of_arrival', models.DateTimeField(auto_now_add=True, verbose_name='date of arrival')),
                ('estimate_year_of_birth', models.IntegerField(verbose_name='estimate year of birth')),
                ('status', models.CharField(choices=[('addopted', 'Addopted'), ('reserved', 'Reserved'), ('unavailable', 'Unavailable'), ('available', 'Available')], default='available', max_length=15, verbose_name='status')),
            ],
        ),
        migrations.CreateModel(
            name='Cage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=3, verbose_name='section')),
                ('space', models.IntegerField(default=1, verbose_name='space')),
                ('species', models.CharField(choices=[('Dog', 'Dog'), ('Cat', 'Cat')], max_length=3, verbose_name='species')),
            ],
        ),
        migrations.CreateModel(
            name='MeetingInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='create date')),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shelter.animal', verbose_name='animal')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meetinginfo_user', to=settings.AUTH_USER_MODEL)),
                ('worker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='meetinginfo_worker', to='authentication.worker')),
            ],
        ),
        migrations.CreateModel(
            name='Adoption',
            fields=[
                ('meetinginfo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shelter.meetinginfo')),
                ('adoption_date', models.DateTimeField(verbose_name='adoption date')),
                ('ID_series_and_number', models.TextField(max_length=9, unique=True, verbose_name='ID car series and number')),
                ('agreement', models.BooleanField(verbose_name='agreement')),
            ],
            bases=('shelter.meetinginfo',),
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('meetinginfo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shelter.meetinginfo')),
                ('reservation_date', models.DateTimeField(verbose_name='reservation date')),
            ],
            bases=('shelter.meetinginfo',),
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
<<<<<<< Updated upstream
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("photo", models.ImageField(upload_to="animal", verbose_name="photo")),
                (
                    "animal",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="shelter.animal",
                        verbose_name="animal",
                    ),
                ),
=======
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alter', models.TextField(max_length=30, verbose_name='alternativer description')),
                ('photo', models.ImageField(upload_to='animal', verbose_name='photo')),
                ('animal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shelter.animal', verbose_name='animal')),
>>>>>>> Stashed changes
            ],
        ),
        migrations.AddField(
            model_name='animal',
            name='cage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shelter.cage', verbose_name='cage'),
        ),
    ]
